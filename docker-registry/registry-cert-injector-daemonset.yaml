# Installs the CA cert on each node.
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: registry-cert-injector-daemonset
  namespace: docker-registry
spec:
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        run-once-daemonset: registry-cert-injector-daemonset
    spec:
      containers:
      - name: registry-cert-injector-daemonset
        image: governmentpaas/curl-ssl
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh", "-c"]
        args:
        - |
            set -exo pipefail
            CERT_DIR=/etc/ssl/registry-cert
            mkdir -p $CERT_DIR
            CERT_FILE=$CERT_DIR/registry-cert-$(date +%Y%m%d%H%M%S).pem
            cp -f /registry-cert/tls.crt $CERT_FILE
            [ ! -d /etc/ssl/certs ] || (
              ln -sf $CERT_FILE /etc/ssl/certs/registry-cert.pem
              c_rehash /etc/ssl/certs
            )
            # when setup with kubeadm (see https://kubernetes.io/docs/setup/best-practices/certificates/#where-certificates-are-stored)
            [ ! -d /etc/kubernetes/pki ] || (
              ln -sf $CERT_FILE /etc/kubernetes/pki/registry-cert.pem
              c_rehash /etc/kubernetes/pki
            )
            sleep 3
            # Remove old certificates
            for OLDCERT in $(ls $CERT_DIR | grep -E 'registry-cert-[0-9]+\.pem' | sort -r | tail -n +3); do
              rm -f $CERT_DIR/$OLDCERT
            done
            (while true; do sleep 86400; done) &
            wait
        resources:
          requests:
            cpu: "10m"
            memory: "16Mi"
          limits:
            cpu: "300m"
            memory: "64Mi"
        volumeMounts:
        - name: registry-cert
          mountPath: /registry-cert
        - name: host-etc
          mountPath: /etc
          readOnly: false
      terminationGracePeriodSeconds: 30
      volumes:
      - name: registry-cert
        secret:
          secretName: docker-registry-tls
      - name: host-etc
        hostPath:
          path: /etc
